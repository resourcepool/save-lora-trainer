{
  "swagger": "2.0",
  "info": {
    "title": "application.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/applications": {
      "get": {
        "summary": "List lists the available applications.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiListApplicationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of applications to return in the result-test.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "organizationID",
            "description": "ID of the organization to filter on.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "search",
            "description": "Search on name (optional).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "post": {
        "summary": "Create creates the given application.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiCreateApplicationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateApplicationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/applications/{application.id}": {
      "put": {
        "summary": "Update updates the given application.",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "application.id",
            "description": "Application ID.\nThis will be automatically assigned on create.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateApplicationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/applications/{application_id}/integrations": {
      "get": {
        "summary": "ListIntegrations lists all configured integrations.",
        "operationId": "ListIntegrations",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiListIntegrationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "description": "The id of the application.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/applications/{application_id}/integrations/http": {
      "get": {
        "summary": "GetHTTPIntegration returns the HTTP application-integration.",
        "operationId": "GetHTTPIntegration",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiGetHTTPIntegrationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "description": "Application ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "delete": {
        "summary": "DeleteIntegration deletes the HTTP application-integration.",
        "operationId": "DeleteHTTPIntegration",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "description": "The id of the application.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/applications/{application_id}/integrations/influxdb": {
      "get": {
        "summary": "GetInfluxDBIntegration returns the InfluxDB application-integration.",
        "operationId": "GetInfluxDBIntegration",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiGetInfluxDBIntegrationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "description": "Application ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "delete": {
        "summary": "DeleteInfluxDBIntegration deletes the InfluxDB application-integration.",
        "operationId": "DeleteInfluxDBIntegration",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "application_id",
            "description": "Application ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/applications/{id}": {
      "get": {
        "summary": "Get returns the requested application.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/apiGetApplicationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Application ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "delete": {
        "summary": "Delete deletes the given application.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Application ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/applications/{integration.application_id}/integrations/http": {
      "post": {
        "summary": "CreateHTTPIntegration creates a HTTP application-integration.",
        "operationId": "CreateHTTPIntegration",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "integration.application_id",
            "description": "The id of the application.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateHTTPIntegrationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "put": {
        "summary": "UpdateHTTPIntegration updates the HTTP application-integration.",
        "operationId": "UpdateHTTPIntegration",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "integration.application_id",
            "description": "The id of the application.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateHTTPIntegrationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/applications/{integration.application_id}/integrations/influxdb": {
      "post": {
        "summary": "CreateInfluxDBIntegration create an InfluxDB application-integration.",
        "operationId": "CreateInfluxDBIntegration",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "integration.application_id",
            "description": "Application ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateInfluxDBIntegrationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "put": {
        "summary": "UpdateInfluxDBIntegration updates the InfluxDB application-integration.",
        "operationId": "UpdateInfluxDBIntegration",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "integration.application_id",
            "description": "Application ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateInfluxDBIntegrationRequest"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    }
  },
  "definitions": {
    "apiApplication": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Application ID.\nThis will be automatically assigned on create."
        },
        "name": {
          "type": "string",
          "description": "Name of the application (must be unique)."
        },
        "description": {
          "type": "string",
          "description": "Description of the application."
        },
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "ID of the organization to which the application belongs."
        },
        "serviceProfileID": {
          "type": "string",
          "description": "ID of the service profile."
        },
        "payloadCodec": {
          "type": "string",
          "description": "Payload codec."
        },
        "payloadEncoderScript": {
          "type": "string",
          "description": "Payload encoder script."
        },
        "payloadDecoderScript": {
          "type": "string",
          "description": "Payload decoder script."
        }
      }
    },
    "apiApplicationListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Application ID."
        },
        "name": {
          "type": "string",
          "description": "Name of the application."
        },
        "description": {
          "type": "string",
          "description": "Description of the application."
        },
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "ID of the organization to which the application belongs."
        },
        "serviceProfileID": {
          "type": "string",
          "description": "ID of the service profile."
        },
        "serviceProfileName": {
          "type": "string",
          "description": "Service-profile name."
        }
      }
    },
    "apiCreateApplicationRequest": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/apiApplication",
          "description": "Application object to create."
        }
      }
    },
    "apiCreateApplicationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Application ID."
        }
      }
    },
    "apiCreateHTTPIntegrationRequest": {
      "type": "object",
      "properties": {
        "integration": {
          "$ref": "#/definitions/apiHTTPIntegration",
          "description": "Integration object to create."
        }
      }
    },
    "apiCreateInfluxDBIntegrationRequest": {
      "type": "object",
      "properties": {
        "integration": {
          "$ref": "#/definitions/apiInfluxDBIntegration",
          "description": "Integration object to create."
        }
      }
    },
    "apiGetApplicationResponse": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/apiApplication",
          "description": "Application object."
        }
      }
    },
    "apiGetHTTPIntegrationResponse": {
      "type": "object",
      "properties": {
        "integration": {
          "$ref": "#/definitions/apiHTTPIntegration",
          "description": "Integration object."
        }
      }
    },
    "apiGetInfluxDBIntegrationResponse": {
      "type": "object",
      "properties": {
        "integration": {
          "$ref": "#/definitions/apiInfluxDBIntegration",
          "description": "Integration object."
        }
      }
    },
    "apiHTTPIntegration": {
      "type": "object",
      "properties": {
        "applicationID": {
          "type": "string",
          "format": "int64",
          "description": "The id of the application."
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiHTTPIntegrationHeader"
          },
          "description": "The headers to use when making HTTP callbacks."
        },
        "uplinkDataURL": {
          "type": "string",
          "description": "The URL to call for uplink data."
        },
        "joinNotificationURL": {
          "type": "string",
          "description": "The URL to call for join notifications."
        },
        "ackNotificationURL": {
          "type": "string",
          "description": "The URL to call for ACK notifications (for confirmed downlink data)."
        },
        "errorNotificationURL": {
          "type": "string",
          "description": "The URL to call for error notifications."
        },
        "statusNotificationURL": {
          "type": "string",
          "description": "The URL to call for device-status notifications."
        },
        "locationNotificationURL": {
          "type": "string",
          "description": "The URL to call for location notifications."
        }
      }
    },
    "apiHTTPIntegrationHeader": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Key"
        },
        "value": {
          "type": "string",
          "title": "Value"
        }
      }
    },
    "apiInfluxDBIntegration": {
      "type": "object",
      "properties": {
        "applicationID": {
          "type": "string",
          "format": "int64",
          "description": "Application ID."
        },
        "endpoint": {
          "type": "string",
          "description": "InfluxDB API write endpoint (e.g. http://localhost:8086/write)."
        },
        "db": {
          "type": "string",
          "description": "InfluxDB database name."
        },
        "username": {
          "type": "string",
          "description": "InfluxDB username."
        },
        "password": {
          "type": "string",
          "description": "InfluxDB password."
        },
        "retentionPolicyName": {
          "type": "string",
          "description": "InfluxDB retention policy name."
        },
        "precision": {
          "$ref": "#/definitions/apiInfluxDBPrecision",
          "description": "InfluxDB timestamp precision."
        }
      }
    },
    "apiInfluxDBPrecision": {
      "type": "string",
      "enum": [
        "NS",
        "U",
        "MS",
        "S",
        "M",
        "H"
      ],
      "default": "NS"
    },
    "apiIntegrationKind": {
      "type": "string",
      "enum": [
        "HTTP",
        "INFLUXDB"
      ],
      "default": "HTTP"
    },
    "apiIntegrationListItem": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/apiIntegrationKind",
          "description": "Integration kind."
        }
      }
    },
    "apiListApplicationResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of applications available within the result-set."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiApplicationListItem"
          },
          "description": "Applications within this result-set."
        }
      }
    },
    "apiListIntegrationResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of integrations available within the result-set."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiIntegrationListItem"
          },
          "description": "Integrations within result-set."
        }
      }
    },
    "apiUpdateApplicationRequest": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/apiApplication",
          "description": "Application object to update."
        }
      }
    },
    "apiUpdateHTTPIntegrationRequest": {
      "type": "object",
      "properties": {
        "integration": {
          "$ref": "#/definitions/apiHTTPIntegration",
          "description": "Integration object to update."
        }
      }
    },
    "apiUpdateInfluxDBIntegrationRequest": {
      "type": "object",
      "properties": {
        "integration": {
          "$ref": "#/definitions/apiInfluxDBIntegration",
          "description": "Integration object."
        }
      }
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    }
  }
}
